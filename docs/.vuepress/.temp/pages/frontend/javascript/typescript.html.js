export const data = JSON.parse("{\"key\":\"v-799e7154\",\"path\":\"/frontend/javascript/typescript.html\",\"title\":\"\",\"lang\":\"zh-CN\",\"frontmatter\":{\"description\":\"ts 的应用场景 我们在什么时候会使用 ts 呢？ 我们使用 typescript 的本质就是为了方便，让代码更加严谨，而且根据泛型的概念，使用泛型就是为了复用，所以在有复用参数的情况下，我们就需要做好接口然后要保证代码的观赏性 shuj 布尔值 最基本的数据类型就是简单的 true/false 值，在 JavaScript 和 TypeScript 里叫做boolean（其它语言中也一样）。 let isDone: boolean = false;\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://mister-hope.github.io/frontend/javascript/typescript.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"melingkk's blog\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"ts 的应用场景 我们在什么时候会使用 ts 呢？ 我们使用 typescript 的本质就是为了方便，让代码更加严谨，而且根据泛型的概念，使用泛型就是为了复用，所以在有复用参数的情况下，我们就需要做好接口然后要保证代码的观赏性 shuj 布尔值 最基本的数据类型就是简单的 true/false 值，在 JavaScript 和 TypeScript 里叫做boolean（其它语言中也一样）。 let isDone: boolean = false;\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"og:updated_time\",\"content\":\"2024-02-26T15:15:38.000Z\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"bluestudyhard\"}],[\"meta\",{\"property\":\"article:modified_time\",\"content\":\"2024-02-26T15:15:38.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":\\\"2024-02-26T15:15:38.000Z\\\",\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"bluestudyhard\\\",\\\"url\\\":\\\"https://github.com/bluestudyhard?tab=repositories\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"ts 的应用场景\",\"slug\":\"ts-的应用场景\",\"link\":\"#ts-的应用场景\",\"children\":[]},{\"level\":2,\"title\":\"shuj\",\"slug\":\"shuj\",\"link\":\"#shuj\",\"children\":[{\"level\":3,\"title\":\"布尔值\",\"slug\":\"布尔值\",\"link\":\"#布尔值\",\"children\":[]},{\"level\":3,\"title\":\"数字\",\"slug\":\"数字\",\"link\":\"#数字\",\"children\":[]},{\"level\":3,\"title\":\"字符串\",\"slug\":\"字符串\",\"link\":\"#字符串\",\"children\":[]},{\"level\":3,\"title\":\"数组\",\"slug\":\"数组\",\"link\":\"#数组\",\"children\":[]},{\"level\":3,\"title\":\"元组 Tuple\",\"slug\":\"元组-tuple\",\"link\":\"#元组-tuple\",\"children\":[]},{\"level\":3,\"title\":\"枚举\",\"slug\":\"枚举\",\"link\":\"#枚举\",\"children\":[]},{\"level\":3,\"title\":\"任意值\",\"slug\":\"任意值\",\"link\":\"#任意值\",\"children\":[]},{\"level\":3,\"title\":\"空值\",\"slug\":\"空值\",\"link\":\"#空值\",\"children\":[]},{\"level\":3,\"title\":\"Null 和 Undefined\",\"slug\":\"null-和-undefined\",\"link\":\"#null-和-undefined\",\"children\":[]},{\"level\":3,\"title\":\"Never\",\"slug\":\"never\",\"link\":\"#never\",\"children\":[]},{\"level\":3,\"title\":\"类型断言\",\"slug\":\"类型断言\",\"link\":\"#类型断言\",\"children\":[]}]}],\"git\":{\"createdTime\":1708960538000,\"updatedTime\":1708960538000,\"contributors\":[{\"name\":\"bluestudyhard\",\"email\":\"3164752596@qq.com\",\"commits\":1}]},\"readingTime\":{\"minutes\":6.8,\"words\":2041},\"filePathRelative\":\"frontend/javascript/typescript.md\",\"localizedDate\":\"2024年2月26日\",\"excerpt\":\"<h2> ts 的应用场景</h2>\\n<p>我们在什么时候会使用 ts 呢？<br>\\n我们使用 typescript 的本质就是为了方便，让代码更加严谨，而且根据泛型的概念，使用泛型就是为了复用，所以在有复用参数的情况下，我们就需要做好接口然后要保证代码的观赏性</p>\\n<h2> shuj</h2>\\n<h3> 布尔值</h3>\\n<p>最基本的数据类型就是简单的 true/false 值，在 JavaScript 和 TypeScript 里叫做<code>boolean</code>（其它语言中也一样）。</p>\\n<div class=\\\"language-text line-numbers-mode\\\" data-ext=\\\"text\\\"><pre class=\\\"language-text\\\"><code>let isDone: boolean = false;\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")
