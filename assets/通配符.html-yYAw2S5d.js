import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as r,c as d,f as e}from"./app-xEYoAD2G.js";const o={},a=e('<h2 id="通配符" tabindex="-1"><a class="header-anchor" href="#通配符" aria-hidden="true">#</a> 通配符</h2><p>通配符是文本值中代替未知字符的特殊字符，可方便使用类似但不相同的数据查找多个项目。 通配符也有助于获得基于特定模式匹配的数据。 例如，寻找帕克街上名叫 John 的所有人。</p><h3 id="常用通配符" tabindex="-1"><a class="header-anchor" href="#常用通配符" aria-hidden="true">#</a> 常用通配符</h3><table><thead><tr><th><strong>字符</strong></th><th><strong>说明</strong></th><th><strong>示例</strong></th></tr></thead><tbody><tr><td>*</td><td>匹配任意字符数。 您可以在字符串中使用星号 (<strong>*</strong>)。</td><td>“<strong>wh*</strong>”将找到 what、white 和 why，但找不到 awhile 或 watch。</td></tr><tr><td>?</td><td>在特定位置中匹配单个字母。</td><td>“<strong>b?ll</strong> ”可以找到 ball、bell 和 bill。</td></tr><tr><td>[ ]</td><td>匹配方括号中的字符。</td><td>“<strong>b[ae]ll</strong>”将找到 ball 和 bell，但找不到 bill。</td></tr><tr><td>!</td><td>在方括号中排除字符。</td><td>“<strong>b[!ae]ll</strong>”将找到 bill 和 bull，但找不到 ball 或 bell。<br><br>“<strong>Like “[!a]*”</strong>”将找到不以字母 a 开头的所有项目。</td></tr><tr><td>-</td><td>匹配一个范围内的字符。 记住以升序指定字符（A 到 Z，而不是 Z 到 A）。</td><td>“<strong>b[a-c]d</strong>”将找到 bad、bbd 和 bcd。</td></tr><tr><td>#</td><td>匹配任意单个数字字符。</td><td>“<strong>1#3</strong>”将找到 103、113 和 123。</td></tr></tbody></table><p>经常使用的是*<br> */*表示任意字符，可以匹配任何字符，包括空格。</p>',5),n=[a];function l(s,h){return r(),d("div",null,n)}const i=t(o,[["render",l],["__file","通配符.html.vue"]]);export{i as default};
