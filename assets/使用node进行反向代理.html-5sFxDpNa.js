const n=JSON.parse(`{"key":"v-386fb589","path":"/frontend/nodejs/%E4%BD%BF%E7%94%A8node%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86.html","title":"","lang":"zh-CN","frontmatter":{"description":"先在这里丢个代码 const express = require(\\"express\\"); const { createProxyMiddleware } = require(\\"http-proxy-middleware\\"); const app = express(); app.use( \\"/*\\", createProxyMiddleware({ target: \\"https://api.openai.com/\\", // 无法代理以/api开头的请求 changeOrigin: true, onProxyRes: function (proxyRes, req, res) { proxyRes.headers[\\"Access-Control-Allow-Origin\\"] = \\"*\\"; }, pathRewrite: (path, req) =&gt; { // 将请求路径中的 '/api' 替换为/* return path.replace(\\"/api\\", \\"\\"); }, onProxyReq: function (proxyReq, req, res) { // 删除 X-Forwarded-For 和 X-Real-IP 头信息 保证不会返回原始客户端的IP proxyReq.removeHeader(\\"X-Forwarded-For\\"); proxyReq.removeHeader(\\"X-Real-IP\\"); }, onProxyRes: function (proxyRes, req, res) { // 删除敏感头信息 delete proxyRes.headers[\\"server\\"]; delete proxyRes.headers[\\"x-powered-by\\"]; }, }) ); module.exports = app;","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/frontend/nodejs/%E4%BD%BF%E7%94%A8node%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86.html"}],["meta",{"property":"og:site_name","content":"melingkk's blog"}],["meta",{"property":"og:description","content":"先在这里丢个代码 const express = require(\\"express\\"); const { createProxyMiddleware } = require(\\"http-proxy-middleware\\"); const app = express(); app.use( \\"/*\\", createProxyMiddleware({ target: \\"https://api.openai.com/\\", // 无法代理以/api开头的请求 changeOrigin: true, onProxyRes: function (proxyRes, req, res) { proxyRes.headers[\\"Access-Control-Allow-Origin\\"] = \\"*\\"; }, pathRewrite: (path, req) =&gt; { // 将请求路径中的 '/api' 替换为/* return path.replace(\\"/api\\", \\"\\"); }, onProxyReq: function (proxyReq, req, res) { // 删除 X-Forwarded-For 和 X-Real-IP 头信息 保证不会返回原始客户端的IP proxyReq.removeHeader(\\"X-Forwarded-For\\"); proxyReq.removeHeader(\\"X-Real-IP\\"); }, onProxyRes: function (proxyRes, req, res) { // 删除敏感头信息 delete proxyRes.headers[\\"server\\"]; delete proxyRes.headers[\\"x-powered-by\\"]; }, }) ); module.exports = app;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-26T15:15:38.000Z"}],["meta",{"property":"article:author","content":"bluestudyhard"}],["meta",{"property":"article:modified_time","content":"2024-02-26T15:15:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-26T15:15:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"bluestudyhard\\",\\"url\\":\\"https://github.com/bluestudyhard?tab=repositories\\"}]}"]]},"headers":[{"level":2,"title":"先在这里丢个代码","slug":"先在这里丢个代码","link":"#先在这里丢个代码","children":[]}],"git":{"createdTime":1708960538000,"updatedTime":1708960538000,"contributors":[{"name":"bluestudyhard","email":"3164752596@qq.com","commits":1}]},"readingTime":{"minutes":0.44,"words":133},"filePathRelative":"frontend/nodejs/使用node进行反向代理.md","localizedDate":"2024年2月26日","excerpt":"<h2> 先在这里丢个代码</h2>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token keyword\\">const</span> express <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"express\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">{</span> createProxyMiddleware <span class=\\"token punctuation\\">}</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"http-proxy-middleware\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">const</span> app <span class=\\"token operator\\">=</span> <span class=\\"token function\\">express</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\napp<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">use</span><span class=\\"token punctuation\\">(</span>\\n  <span class=\\"token string\\">\\"/*\\"</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token function\\">createProxyMiddleware</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n    target<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"https://api.openai.com/\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">// 无法代理以/api开头的请求</span>\\n    changeOrigin<span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token function-variable function\\">onProxyRes</span><span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span>proxyRes<span class=\\"token punctuation\\">,</span> req<span class=\\"token punctuation\\">,</span> res<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      proxyRes<span class=\\"token punctuation\\">.</span>headers<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"Access-Control-Allow-Origin\\"</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"*\\"</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token function-variable function\\">pathRewrite</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">(</span>path<span class=\\"token punctuation\\">,</span> req<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token comment\\">// 将请求路径中的 '/api' 替换为/*</span>\\n      <span class=\\"token keyword\\">return</span> path<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">replace</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"/api\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token function-variable function\\">onProxyReq</span><span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span>proxyReq<span class=\\"token punctuation\\">,</span> req<span class=\\"token punctuation\\">,</span> res<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token comment\\">// 删除 X-Forwarded-For 和 X-Real-IP 头信息 保证不会返回原始客户端的IP</span>\\n      proxyReq<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">removeHeader</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"X-Forwarded-For\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      proxyReq<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">removeHeader</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"X-Real-IP\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token function-variable function\\">onProxyRes</span><span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span>proxyRes<span class=\\"token punctuation\\">,</span> req<span class=\\"token punctuation\\">,</span> res<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token comment\\">// 删除敏感头信息</span>\\n      <span class=\\"token keyword\\">delete</span> proxyRes<span class=\\"token punctuation\\">.</span>headers<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"server\\"</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">delete</span> proxyRes<span class=\\"token punctuation\\">.</span>headers<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"x-powered-by\\"</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nmodule<span class=\\"token punctuation\\">.</span>exports <span class=\\"token operator\\">=</span> app<span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
