const t=JSON.parse(`{"key":"v-5ed8e27d","path":"/frontend/%E8%A7%A3%E6%9E%90html.html","title":"","lang":"zh-CN","frontmatter":{"description":"想解析 html 的起因 我的 navigation 有一个功能需求就是输入网站 url 就可以直接得到网站的 icon 和名称(描述)，但是这样的话需要直接根据 url 去爬取 获取到的 data 是一个 html，所以需要解析 两天后想到了绝妙的方法 from fish 因为我这个需求单纯的只是解析书签，然后如果这点小事都要传到后端再传回来的话会很费资源，所以最好就是在前端搞定了以后，将确认要的网站丢回去。所以有一个很妙的方法，众所周知，只要拿到了文件，然后将它加到一个&lt;div&gt;&lt;/div&gt; 浏览器就自己会帮你解析成 html，然后就可以使用 dom 元素了(node 里达咩) 综上，代码端上来罢","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/frontend/%E8%A7%A3%E6%9E%90html.html"}],["meta",{"property":"og:site_name","content":"melingkk's blog"}],["meta",{"property":"og:description","content":"想解析 html 的起因 我的 navigation 有一个功能需求就是输入网站 url 就可以直接得到网站的 icon 和名称(描述)，但是这样的话需要直接根据 url 去爬取 获取到的 data 是一个 html，所以需要解析 两天后想到了绝妙的方法 from fish 因为我这个需求单纯的只是解析书签，然后如果这点小事都要传到后端再传回来的话会很费资源，所以最好就是在前端搞定了以后，将确认要的网站丢回去。所以有一个很妙的方法，众所周知，只要拿到了文件，然后将它加到一个&lt;div&gt;&lt;/div&gt; 浏览器就自己会帮你解析成 html，然后就可以使用 dom 元素了(node 里达咩) 综上，代码端上来罢"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-26T15:15:38.000Z"}],["meta",{"property":"article:author","content":"bluestudyhard"}],["meta",{"property":"article:modified_time","content":"2024-02-26T15:15:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-26T15:15:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"bluestudyhard\\",\\"url\\":\\"https://github.com/bluestudyhard?tab=repositories\\"}]}"]]},"headers":[{"level":2,"title":"想解析 html 的起因","slug":"想解析-html-的起因","link":"#想解析-html-的起因","children":[]},{"level":2,"title":"两天后想到了绝妙的方法","slug":"两天后想到了绝妙的方法","link":"#两天后想到了绝妙的方法","children":[{"level":3,"title":"使用 jsdom","slug":"使用-jsdom","link":"#使用-jsdom","children":[]}]}],"git":{"createdTime":1708960538000,"updatedTime":1708960538000,"contributors":[{"name":"bluestudyhard","email":"3164752596@qq.com","commits":1}]},"readingTime":{"minutes":1.8,"words":540},"filePathRelative":"frontend/解析html.md","localizedDate":"2024年2月26日","excerpt":"<h2> 想解析 html 的起因</h2>\\n<p>我的 navigation 有一个功能需求就是输入网站 url 就可以直接得到网站的 icon 和名称(描述)，但是这样的话需要直接根据 url 去爬取<br>\\n获取到的 data 是一个 html，所以需要解析</p>\\n<h2> 两天后想到了绝妙的方法</h2>\\n<p>from fish 因为我这个需求单纯的只是解析书签，然后如果这点小事都要传到后端再传回来的话会很费资源，所以最好就是在前端搞定了以后，将确认要的网站丢回去。所以有一个很妙的方法，众所周知，只要拿到了文件，然后将它加到一个<code>&lt;div&gt;&lt;/div&gt; </code>浏览器就自己会帮你解析成 html，然后就可以使用 dom 元素了(node 里达咩)<br>\\n综上，代码端上来罢</p>","autoDesc":true}`);export{t as data};
