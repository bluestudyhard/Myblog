import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,f as t}from"./app-xEYoAD2G.js";const p="/assets/20231018110838.png)-xwU5oI2j.png",e="/assets/20231018111428-jPtOUIep.png",o="/assets/20231018111604-xi1fpy1C.png",c={},i=t('<h2 id="起因" tabindex="-1"><a class="header-anchor" href="#起因" aria-hidden="true">#</a> 起因</h2><p>在写我的navigation项目时，我拿取仓库的网站列表数据(存在local中),然后想使用一个temp数组在后台添加一个checked属性，以便更好的控制checkbox的状态，但是我发现，我在temp数组中添加checked属性后，local中的数据也被添加了checked属性，这是为什么呢？<br> 一开始我以为是pinia的持久化插件的问题，自动检测到我的数据变化就给我更新了<br> 但是我把他注释掉后，而且使用了原生的localStorage.setItem()方法，还是会出现这个问题，那我们继续排查</p><ul><li>先让我们看看代码<br><img src="'+p+'" alt="" loading="lazy"><br> 在这里面我首先拿数据时就使用了解构赋值，然后我又使用了map，map本身就是获得一个新的数组，所以我想，我在map中添加checked属性，应该不会影响到原数组的，而且console出来的值也表示这俩货不相等，那么问题出现在哪里呢？</li><li>检索网上+自己实验后发现，解构赋值在1层数组的时候实现的是深拷贝<br><img src="'+e+'" alt="" loading="lazy"></li><li>但是我的website数组，嵌套了两层<br><img src="'+o+`" alt="" loading="lazy"><br> 由此引出了解决方法<br> 方法1是传统的<code>JSON.parse(JSON.stringify())</code>方法</li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> tempWebSiteList <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>webSiteList<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> website <span class="token operator">=</span> item
  website<span class="token punctuation">.</span>bookmarks <span class="token operator">=</span> item<span class="token punctuation">.</span>bookmarks<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>bookmark<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    bookmark<span class="token punctuation">.</span>checked <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token keyword">return</span> bookmark
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> website
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>方法2的话，还是使用解构，那我们想，第一层解构解不了，那我们就使用两层解构呗</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> tempWebSiteList <span class="token operator">=</span> webSiteList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">website</span><span class="token operator">:</span> webSiteType</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> bookmarks <span class="token operator">=</span> website<span class="token punctuation">.</span>bookmarks<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">bookmark</span><span class="token operator">:</span> bookMarkType</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>bookmark<span class="token punctuation">,</span> <span class="token literal-property property">checked</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>website<span class="token punctuation">,</span> bookmarks <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),l=[i];function r(u,k){return s(),a("div",null,l)}const b=n(c,[["render",r],["__file","关于js的深拷贝和浅拷贝.html.vue"]]);export{b as default};
