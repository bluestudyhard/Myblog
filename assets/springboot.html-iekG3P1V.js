const n=JSON.parse(`{"key":"v-3600cfe1","path":"/backend/java/springboot.html","title":"","lang":"zh-CN","frontmatter":{"description":"前提思想，理解java项目中的几种层 实体层对应到数据库里的实体类来理解 dao层对应到数据库里的表来理解 service层对应到业务逻辑来理解 controller层，直接与前端交互，为前端提供接口 mapper层，是dao层的实现，是mybatis的一种实现方式，在mapper层里使用sql语句 mybatis+mysql 使用 mybatisplus 在 controller 中 package com.example.demo2.controller; import com.example.demo2.entity.MyList; import com.example.demo2.dao.ToDoList; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.web.bind.annotation.*; import java.util.List; // controller 写的是操作方法 @RestController public class ToDoListController { // 引入mapper @Autowired private ToDoList toDoList; @GetMapping(\\"/todo\\") public List&lt;MyList&gt; getTodoList() { List&lt;MyList&gt; list = toDoList.selectList(null); return list; } @PostMapping(\\"/todo\\") public String addTodoList(@RequestBody MyList list) { System.out.println(list); int flag = toDoList.insert(list); if (flag &gt; 0) return \\"插入成功\\"; else return \\"插入失败\\"; } @DeleteMapping(\\"/todo/{id}\\") public String deleteTodoList(@PathVariable int id) { int flag = toDoList.deleteById(id); if (flag &gt; 0) { return \\"删除成功\\"; } else { return \\"删除失败\\"; } } @PutMapping(\\"/todo/{id}\\") public String updateTodoList(@PathVariable int id, @RequestBody MyList updatedList) { updatedList.setId(id); int flag = toDoList.updateById(updatedList); if (flag &gt; 0) { return \\"更新成功\\"; } else { return \\"更新失败\\"; } } }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/backend/java/springboot.html"}],["meta",{"property":"og:site_name","content":"melingkk's blog"}],["meta",{"property":"og:description","content":"前提思想，理解java项目中的几种层 实体层对应到数据库里的实体类来理解 dao层对应到数据库里的表来理解 service层对应到业务逻辑来理解 controller层，直接与前端交互，为前端提供接口 mapper层，是dao层的实现，是mybatis的一种实现方式，在mapper层里使用sql语句 mybatis+mysql 使用 mybatisplus 在 controller 中 package com.example.demo2.controller; import com.example.demo2.entity.MyList; import com.example.demo2.dao.ToDoList; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.web.bind.annotation.*; import java.util.List; // controller 写的是操作方法 @RestController public class ToDoListController { // 引入mapper @Autowired private ToDoList toDoList; @GetMapping(\\"/todo\\") public List&lt;MyList&gt; getTodoList() { List&lt;MyList&gt; list = toDoList.selectList(null); return list; } @PostMapping(\\"/todo\\") public String addTodoList(@RequestBody MyList list) { System.out.println(list); int flag = toDoList.insert(list); if (flag &gt; 0) return \\"插入成功\\"; else return \\"插入失败\\"; } @DeleteMapping(\\"/todo/{id}\\") public String deleteTodoList(@PathVariable int id) { int flag = toDoList.deleteById(id); if (flag &gt; 0) { return \\"删除成功\\"; } else { return \\"删除失败\\"; } } @PutMapping(\\"/todo/{id}\\") public String updateTodoList(@PathVariable int id, @RequestBody MyList updatedList) { updatedList.setId(id); int flag = toDoList.updateById(updatedList); if (flag &gt; 0) { return \\"更新成功\\"; } else { return \\"更新失败\\"; } } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-26T15:15:38.000Z"}],["meta",{"property":"article:author","content":"bluestudyhard"}],["meta",{"property":"article:modified_time","content":"2024-02-26T15:15:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-26T15:15:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"bluestudyhard\\",\\"url\\":\\"https://github.com/bluestudyhard?tab=repositories\\"}]}"]]},"headers":[{"level":2,"title":"前提思想，理解java项目中的几种层","slug":"前提思想-理解java项目中的几种层","link":"#前提思想-理解java项目中的几种层","children":[{"level":3,"title":"实体层对应到数据库里的实体类来理解","slug":"实体层对应到数据库里的实体类来理解","link":"#实体层对应到数据库里的实体类来理解","children":[]},{"level":3,"title":"dao层对应到数据库里的表来理解","slug":"dao层对应到数据库里的表来理解","link":"#dao层对应到数据库里的表来理解","children":[]},{"level":3,"title":"service层对应到业务逻辑来理解","slug":"service层对应到业务逻辑来理解","link":"#service层对应到业务逻辑来理解","children":[]},{"level":3,"title":"controller层，直接与前端交互，为前端提供接口","slug":"controller层-直接与前端交互-为前端提供接口","link":"#controller层-直接与前端交互-为前端提供接口","children":[]},{"level":3,"title":"mapper层，是dao层的实现，是mybatis的一种实现方式，在mapper层里使用sql语句","slug":"mapper层-是dao层的实现-是mybatis的一种实现方式-在mapper层里使用sql语句","link":"#mapper层-是dao层的实现-是mybatis的一种实现方式-在mapper层里使用sql语句","children":[]}]},{"level":2,"title":"mybatis+mysql","slug":"mybatis-mysql","link":"#mybatis-mysql","children":[]},{"level":2,"title":"使用 mybatisplus","slug":"使用-mybatisplus","link":"#使用-mybatisplus","children":[{"level":3,"title":"在 controller 中","slug":"在-controller-中","link":"#在-controller-中","children":[]}]},{"level":2,"title":"常见报错分析与解决","slug":"常见报错分析与解决","link":"#常见报错分析与解决","children":[{"level":3,"title":"使用mapper的xml文件没有在配置文件里配置，框架找不到xml文件","slug":"使用mapper的xml文件没有在配置文件里配置-框架找不到xml文件","link":"#使用mapper的xml文件没有在配置文件里配置-框架找不到xml文件","children":[]}]}],"git":{"createdTime":1708960538000,"updatedTime":1708960538000,"contributors":[{"name":"bluestudyhard","email":"3164752596@qq.com","commits":1}]},"readingTime":{"minutes":1.38,"words":413},"filePathRelative":"backend/java/springboot.md","localizedDate":"2024年2月26日","excerpt":"<h2> 前提思想，理解java项目中的几种层</h2>\\n<h3> 实体层对应到数据库里的实体类来理解</h3>\\n<h3> dao层对应到数据库里的表来理解</h3>\\n<h3> service层对应到业务逻辑来理解</h3>\\n<h3> controller层，直接与前端交互，为前端提供接口</h3>\\n<h3> mapper层，是dao层的实现，是mybatis的一种实现方式，在mapper层里使用sql语句</h3>\\n<h2> mybatis+mysql</h2>\\n<h2> 使用 mybatisplus</h2>\\n<h3> 在 controller 中</h3>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">package</span> <span class=\\"token namespace\\">com<span class=\\"token punctuation\\">.</span>example<span class=\\"token punctuation\\">.</span>demo2<span class=\\"token punctuation\\">.</span>controller</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">com<span class=\\"token punctuation\\">.</span>example<span class=\\"token punctuation\\">.</span>demo2<span class=\\"token punctuation\\">.</span>entity<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">MyList</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">com<span class=\\"token punctuation\\">.</span>example<span class=\\"token punctuation\\">.</span>demo2<span class=\\"token punctuation\\">.</span>dao<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">ToDoList</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>springframework<span class=\\"token punctuation\\">.</span>beans<span class=\\"token punctuation\\">.</span>factory<span class=\\"token punctuation\\">.</span>annotation<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">Autowired</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">org<span class=\\"token punctuation\\">.</span>springframework<span class=\\"token punctuation\\">.</span>web<span class=\\"token punctuation\\">.</span>bind<span class=\\"token punctuation\\">.</span>annotation<span class=\\"token punctuation\\">.</span></span><span class=\\"token operator\\">*</span></span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">java<span class=\\"token punctuation\\">.</span>util<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">List</span></span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// controller 写的是操作方法</span>\\n<span class=\\"token annotation punctuation\\">@RestController</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">ToDoListController</span> <span class=\\"token punctuation\\">{</span>\\n\\n    <span class=\\"token comment\\">// 引入mapper</span>\\n    <span class=\\"token annotation punctuation\\">@Autowired</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">ToDoList</span> toDoList<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token annotation punctuation\\">@GetMapping</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"/todo\\"</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">List</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">MyList</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token function\\">getTodoList</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">List</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">MyList</span><span class=\\"token punctuation\\">&gt;</span></span> list <span class=\\"token operator\\">=</span> toDoList<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">selectList</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> list<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token annotation punctuation\\">@PostMapping</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"/todo\\"</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">addTodoList</span><span class=\\"token punctuation\\">(</span><span class=\\"token annotation punctuation\\">@RequestBody</span> <span class=\\"token class-name\\">MyList</span> list<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span>list<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">int</span> flag <span class=\\"token operator\\">=</span> toDoList<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">insert</span><span class=\\"token punctuation\\">(</span>list<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>flag <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span> <span class=\\"token string\\">\\"插入成功\\"</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">return</span> <span class=\\"token string\\">\\"插入失败\\"</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token annotation punctuation\\">@DeleteMapping</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"/todo/{id}\\"</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">deleteTodoList</span><span class=\\"token punctuation\\">(</span><span class=\\"token annotation punctuation\\">@PathVariable</span> <span class=\\"token keyword\\">int</span> id<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">int</span> flag <span class=\\"token operator\\">=</span> toDoList<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">deleteById</span><span class=\\"token punctuation\\">(</span>id<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>flag <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">return</span> <span class=\\"token string\\">\\"删除成功\\"</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">return</span> <span class=\\"token string\\">\\"删除失败\\"</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token annotation punctuation\\">@PutMapping</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"/todo/{id}\\"</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">updateTodoList</span><span class=\\"token punctuation\\">(</span><span class=\\"token annotation punctuation\\">@PathVariable</span> <span class=\\"token keyword\\">int</span> id<span class=\\"token punctuation\\">,</span> <span class=\\"token annotation punctuation\\">@RequestBody</span> <span class=\\"token class-name\\">MyList</span> updatedList<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        updatedList<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setId</span><span class=\\"token punctuation\\">(</span>id<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">int</span> flag <span class=\\"token operator\\">=</span> toDoList<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">updateById</span><span class=\\"token punctuation\\">(</span>updatedList<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>flag <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">return</span> <span class=\\"token string\\">\\"更新成功\\"</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">return</span> <span class=\\"token string\\">\\"更新失败\\"</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
