const e=JSON.parse(`{"key":"v-1015f1ce","path":"/frontend/docker/docker.html","title":"","lang":"zh-CN","frontmatter":{"description":"docker 基本知识 容器是由镜像实例化而来，这和我们学习的面向对象的概念十分相似，我们可以把镜像看作类，把容器看作类实例化后的对象。 也可以说镜像是文件, 容器是进程。 容器是基于镜像创建的, 即容器中的进程依赖于镜像中的文件, 这里的文件包括进程运行所需要的可执行文件， 依赖软件， 库文件， 配置文件等等... docker 的镜像概念类似虚拟机的镜像。是一个只读的模板，一个独立的文件系统，包括运行容器所需的数据，可以用来创建新的容器。 例如：一个镜像可以包含一个完整的 ubuntu 操作系统环境，里面仅安装了 mysql 或用户需要的其他应用程序。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/frontend/docker/docker.html"}],["meta",{"property":"og:site_name","content":"melingkk's blog"}],["meta",{"property":"og:description","content":"docker 基本知识 容器是由镜像实例化而来，这和我们学习的面向对象的概念十分相似，我们可以把镜像看作类，把容器看作类实例化后的对象。 也可以说镜像是文件, 容器是进程。 容器是基于镜像创建的, 即容器中的进程依赖于镜像中的文件, 这里的文件包括进程运行所需要的可执行文件， 依赖软件， 库文件， 配置文件等等... docker 的镜像概念类似虚拟机的镜像。是一个只读的模板，一个独立的文件系统，包括运行容器所需的数据，可以用来创建新的容器。 例如：一个镜像可以包含一个完整的 ubuntu 操作系统环境，里面仅安装了 mysql 或用户需要的其他应用程序。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-26T15:15:38.000Z"}],["meta",{"property":"article:author","content":"bluestudyhard"}],["meta",{"property":"article:modified_time","content":"2024-02-26T15:15:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-26T15:15:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"bluestudyhard\\",\\"url\\":\\"https://github.com/bluestudyhard?tab=repositories\\"}]}"]]},"headers":[{"level":2,"title":"docker 基本知识","slug":"docker-基本知识","link":"#docker-基本知识","children":[]},{"level":2,"title":"docker 镜像","slug":"docker-镜像","link":"#docker-镜像","children":[{"level":3,"title":"dockerfile 详解","slug":"dockerfile-详解","link":"#dockerfile-详解","children":[]}]}],"git":{"createdTime":1708960538000,"updatedTime":1708960538000,"contributors":[{"name":"bluestudyhard","email":"3164752596@qq.com","commits":1}]},"readingTime":{"minutes":3.89,"words":1167},"filePathRelative":"frontend/docker/docker.md","localizedDate":"2024年2月26日","excerpt":"<h2> docker 基本知识</h2>\\n<p>容器是由镜像实例化而来，这和我们学习的面向对象的概念十分相似，我们可以把镜像看作类，把容器看作类实例化后的对象。</p>\\n<p>也可以说镜像是文件, 容器是进程。 容器是基于镜像创建的, 即容器中的进程依赖于镜像中的文件, 这里的文件包括进程运行所需要的可执行文件， 依赖软件， 库文件， 配置文件等等...<br>\\ndocker 的镜像概念类似虚拟机的镜像。是一个只读的模板，一个独立的文件系统，包括运行容器所需的数据，可以用来创建新的容器。</p>\\n<p>例如：一个镜像可以包含一个完整的 ubuntu 操作系统环境，里面仅安装了 mysql 或用户需要的其他应用程序。</p>","autoDesc":true}`);export{e as data};
