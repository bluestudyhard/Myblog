import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,f as t}from"./app-xEYoAD2G.js";const p="/assets/image3-PivLVDOC.png",e={},o=t(`<h2 id="想使用这玩意的原因" tabindex="-1"><a class="header-anchor" href="#想使用这玩意的原因" aria-hidden="true">#</a> 想使用这玩意的原因</h2><p>因为想到在我的 page 里如果可以动态导入图片的话，那么就可以理论上无限自定义滚动了。。而且这个东西的运用场景也挺多的，所以就赶紧去找了一下方法</p><h2 id="实现原理" tabindex="-1"><a class="header-anchor" href="#实现原理" aria-hidden="true">#</a> 实现原理</h2><h3 id="动态导入图片" tabindex="-1"><a class="header-anchor" href="#动态导入图片" aria-hidden="true">#</a> 动态导入图片</h3><p>一个简单的示例</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> imglists <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">importImages</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">imgNum</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> imgNum<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> imgPath <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">@/assets/images/page</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.webp</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    imglists<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>imgPath<span class="token punctuation">.</span>default<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这玩意得到的是一个 promise(显而易见)，主要是想知道一下 imgPath 是什么东西，console 以后看到<br><img src="`+p+'" alt="Alt text" loading="lazy"></p>',7),c=[o];function i(l,u){return s(),a("div",null,c)}const d=n(e,[["render",i],["__file","动态导入方法.html.vue"]]);export{d as default};
